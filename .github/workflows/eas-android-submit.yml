name: EAS Android Submit

# Automatically triggered on push to main branch
on:
  push:
    branches:
      - main

jobs:
  build-and-submit-android:
    runs-on: ubuntu-latest
    env:
      BUILD_POLL_MAX_ATTEMPTS: 30  # total wait time ~15 minutes
      BUILD_POLL_INTERVAL: 30      # seconds between status checks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Authenticate with Expo
        run: |
          echo "Authenticating with Expo token..."
          EXPO_TOKEN=${{ secrets.EXPO_TOKEN }} eas login

      - name: Install dependencies
        run: npm ci

      - name: Build Android App
        run: |
          echo "Starting Android build..."
          BUILD_OUTPUT=$(eas build --platform android --profile production --non-interactive --json)
          BUILD_ID=$(echo $BUILD_OUTPUT | jq -r '.builds[0].id')
          echo "Build ID: $BUILD_ID"
          echo "BUILD_ID=$BUILD_ID" >> $GITHUB_ENV

      - name: Wait for build completion
        run: |
          echo "Waiting for build completion..."
          MAX_ATTEMPTS=${{ env.BUILD_POLL_MAX_ATTEMPTS }}
          SLEEP_INTERVAL=${{ env.BUILD_POLL_INTERVAL }}
          ATTEMPT=1

          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            echo "Checking build status (attempt $ATTEMPT/$MAX_ATTEMPTS)..."
            BUILD_STATUS=$(eas build:status --build-id ${{ env.BUILD_ID }} --json | jq -r '.status')

            echo "Build status: $BUILD_STATUS"

            if [ "$BUILD_STATUS" = "finished" ]; then
              echo "Build completed successfully!"
              break
            elif [ "$BUILD_STATUS" = "errored" ] || [ "$BUILD_STATUS" = "canceled" ]; then
              echo "Build failed with status: $BUILD_STATUS"
              exit 1
            fi

            if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
              echo "Build did not complete within expected time"
              exit 1
            fi

            echo "Waiting $SLEEP_INTERVAL seconds before next check..."
            sleep $SLEEP_INTERVAL
            ATTEMPT=$((ATTEMPT + 1))
          done

      - name: Download build artifact
        run: |
          echo "Downloading Android build..."
          eas build:download --build-id ${{ env.BUILD_ID }} --output ./app.aab
          echo "Build artifact downloaded successfully"

      - name: Submit to Google Play
        run: |
          echo "Submitting to Google Play..."
          set +x
          printf "%s" "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY }}" > ./service-account-key.json
          eas submit -p android \
            --profile production \
            --path ./app.aab \
            --non-interactive \
            --service-account-key-path ./service-account-key.json
          set -x

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up artifacts..."
          rm -f ./app.aab ./service-account-key.json
